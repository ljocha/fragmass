<tool id="frag_hires_mass" name="Candidate hi-res mass of predicted low-res fragments" version="0.1.2" python_template_version="3.5">
    <description><![CDATA[
Take a MSP file with predicted fragment peaks at low-res and generate the "known features" table of tentative hi-res peaks suitable as input to hybrid apLCMS
    ]]></description>
    <requirements>
	<container type="docker">ljocha/fragmass</container>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        sed 's/COMPOUND_NAME/NAME/' '$input' > in_tmp.msp &&
        Rscript ${__tool_directory__}/fragmass.R 
	#if $rtdev
		--rtdev '$rtdev' 
	#end if
	#if $mzdev
		--mzdev '$mzdev' 
	#end if
	#if $mzrange
		--mzrange '$mzrange' 
	#end if
	#if $known_table
		--known_table '$known_table'
	#end if
		'in_tmp.msp' '$output'
    ]]></command>
    <inputs>
	<param name="input" type="data" format="msp" help="MSP with predicted peaks" />
	<param name="known_table" type="data" format="parquet" optional="true" help="known features table (apLCMS)" />
	<param name="rtdev" type="float" optional="true" value="0.15" help="Standard deviation in RT (s)"/>
	<param name="mzdev" type="float" optional="true" value="1.0" help="Relative standard deviation in m/z"/>
	<param name="mzrange" type="float" optional="true" value="0.15" help="Searched range around nominal mass (Da)"/>
    </inputs>
    <outputs>
	<data name="output" format="parquet" />
    </outputs>
    <help><![CDATA[
        Use with peak prediction (https://is.muni.cz/auth/th/dz62r/) applied on previous run of apLCMS - RAMClustR - matchMS chain.
    ]]></help>
</tool>
